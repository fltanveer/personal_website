---
const href = Astro.url.href;

const { title, id = "text", class: className } = Astro.props;
---

<a
  href={`https://www.facebook.com/sharer/sharer.php?u=${href}`}
  class="w-12 h-12 rounded-full inline-flex justify-center items-center"
  rel="noopener noreferrer"
  target="_blank"
>
  <span class="sr-only">Share on facebook</span>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
    class="feather feather-facebook"
    aria-hidden="true"
    ><path d="M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z"
    ></path>
  </svg>
</a>
<a
  href={`https://twitter.com/intent/tweet?url=${href}&text=${title}`}
  class="w-12 h-12 rounded-full inline-flex justify-center items-center"
  rel="noopener noreferrer"
  target="_blank"
>
  <span class="sr-only">Share on twitter</span>

  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
    class="feather feather-twitter"
    aria-hidden="true"
    ><path
      d="M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"
    ></path>
  </svg>
</a>
<a
  href={`https://www.linkedin.com/sharing/share-offsite?url=${href}&title=${title}`}
  class="w-12 h-12 rounded-full inline-flex justify-center items-center"
  rel="noopener noreferrer"
  target="_blank"
>
  <span class="sr-only">Share on linkedin</span>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
    class="feather feather-linkedin"
    aria-hidden="true"
    ><path
      d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"
    ></path><rect x="2" y="9" width="4" height="12"></rect><circle
      cx="4"
      cy="4"
      r="2"></circle>
  </svg>
</a>
<div class="relative">
  <button
    class="w-12 h-12 rounded-full inline-flex justify-center items-center relative"
    id="copy"
  >
    <span class="sr-only">Copy link</span>
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
      class="feather feather-link"
      ><path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"
      ></path><path
        d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path>
    </svg>
  </button>
  <span
    class:list={[
      className,
      "absolute -bottom-4 bg-transparent text-slate-800 font-medium hidden right-0",
    ]}
    id={id}
    class="text">Copied</span
  >
</div>
<script>
  import writeText from "copy-to-clipboard";
  const element = document.getElementById("copy");

  const text = document.getElementById("text");
  if (element) {
    element.addEventListener("click", () => {
      writeText(window.location.href);
      if (text) {
        text.classList.remove("hidden");
        text.classList.add("block");
        text.classList.add("bounce");
        setTimeout(() => {
          text.classList.add("hidden");
          text.classList.remove("block");
          text.classList.remove("bounce");
        }, 1500);
      }
    });
  }
</script>
