---
import groupby from "lodash-es/groupBy";
import BlogsList from "../components/BlogsList";
import BaseLayout from "../layouts/BaseLayout.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../config";
import type { MarkdownInstance, Frontmatter } from "../types/frontMatter";

const posts = await Astro.glob<MarkdownInstance>("./blogs/*.{md,mdx}");
const categories = posts.map((post) => post.frontmatter.category);
const uniqueCategories = [...new Set(categories)];
const sortFunction = (a: MarkdownInstance, b: MarkdownInstance) =>
  new Date(b.frontmatter.pubDate).valueOf() -
  new Date(a.frontmatter.pubDate).valueOf();

const defaultPosts = posts.sort(sortFunction);
const groupedPosts: Record<string, MarkdownInstance[]> = groupby(
  posts,
  (arr: MarkdownInstance) => arr.frontmatter.category
);

const filtered: Record<string, Frontmatter[]> = Object.keys(
  groupedPosts
).reduce((acc, key) => {
  return {
    ...acc,
    [key]: groupedPosts[key]?.sort(sortFunction),
  };
}, {});

const data: Record<string, MarkdownInstance[]> = {
  default: defaultPosts,
  ...filtered,
};
---

<BaseLayout content={{ title: SITE_TITLE, description: SITE_DESCRIPTION }}>
  <section class="mt-20">
    <BlogsList uniqueCategories={uniqueCategories} data={data} client:idle />
  </section>
</BaseLayout>
