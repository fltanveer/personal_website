---
import "@fontsource/roboto-flex";
import HeaderAuxLinks from "../components/HeaderAuxLinks.astro";
import SocialLinks from "../components/SocialLinks.astro";

import BaseLayout from "./BaseLayout.astro";

export interface Props {
  content: {
    title: string;
    description: string;
    pubDate?: string;
    updatedDate?: string;
    heroImage?: string;
    nextLink?: string;
    previousLink?: string;
  };
  href: string;
}

const includeShowcase = !Astro.url.toString().includes("showcase");

const {
  content: {
    title,
    description,
    pubDate,
    updatedDate,
    heroImage = "/about-me.jpg",
  },
} = Astro.props;
---

<BaseLayout content={{ title, description, heroImage }}>
  <div class="blog__wrapper">
    {
      includeShowcase ? (
        <aside class="hidden left-0 h-16 bg-white md:bg-transparent w-full bottom-0 lg:flex p-2 justify-around items-center shadow md:top-12 md:left-0 md:h-72 md:flex-col md:w-16 md:sticky md:mt-16 z-10 md:shadow-transparent">
          <SocialLinks title={title} />
        </aside>
      ) : null
    }
    <div
      class="fixed flex left-0 lg:hidden w-full bottom-0 p-2 justify-around items-center bg-black/80 backdrop-blur-sm z-10"
    >
      <HeaderAuxLinks />
    </div>
    <main class="max-w-[calc(65ch+128px)] mx-auto">
      <article
        class="prose lg:prose-lg xl:prose-lg mt-20 relative mx-auto w-full xl:prose-h1:leading-[1.1] prose-img:mx-auto"
      >
        {heroImage && <img width={720} height={360} src={heroImage} alt="" />}
        <h1>{title}</h1>
        {pubDate && <time>{pubDate}</time>}
        {
          updatedDate && (
            <div>
              Last updated on <time>{updatedDate}</time>
            </div>
          )
        }
        <slot />
      </article>

      <div
        class="flex lg:hidden border-t border-b border-[#f5df36] mt-8 w-full justify-center gap-2 relative"
        id="second-copy"
      >
        <SocialLinks title={title} id="boom" />
      </div>
    </main>
  </div>
</BaseLayout>

<style>
  @media (min-width: 1024px) {
    .blog__wrapper {
      display: grid;
      grid-template-columns: auto 1fr;
    }
  }
</style>

<script>
  import writeText from "copy-to-clipboard";
  const element = document.getElementById("second-copy");
  if (element) {
    const text = document.getElementById("text");
    const text2 = document.getElementById("boom");
    element.addEventListener("click", () => {
      writeText(window.location.href);
      if (text) {
        text.classList.remove("hidden");
        text.classList.add("block");
        text.classList.add("bounce");

        setTimeout(() => {
          text.classList.add("hidden");
          text.classList.remove("block");
          text.classList.remove("bounce");
        }, 1500);
      }

      if (text2) {
        text2.classList.remove("hidden");
        text2.classList.add("block");
        text2.classList.add("bounce");
        setTimeout(() => {
          text2.classList.add("hidden");
          text2.classList.remove("block");
          text2.classList.remove("bounce");
        }, 1500);
      }
    });
  }
</script>
